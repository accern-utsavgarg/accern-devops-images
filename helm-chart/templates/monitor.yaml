apiVersion: apps/v1
kind: Deployment
metadata:
  name: xyme-monitor
  namespace: {{ .Release.Namespace }}
  labels:
    app: xyme-monitor
spec:
  replicas: {{ .Values.monitorReplicas }}
  selector:
    matchLabels:
      app: xyme-monitor
  template:
    metadata:
      labels:
        app: xyme-monitor
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        kube/nodetype: {{ .Values.nodeSelector }}
      tolerations:
        - operator: Equal
          key: dedicated
          value: {{ .Values.nodeSelector }}
          effect: NoSchedule
      {{- end }}
      serviceAccountName: xyme-service
      containers:
        - image: "{{ required "Provide a value for ecrUrl." .Values.ecrUrl }}/{{ required "Provide a value for imageRepo. Most likely 'xyme-backend'" .Values.imageRepo }}:monitor-{{ required "Provide a value for imageTag. Most likely 'vX.X.X'" .Values.imageTag }}"
          imagePullPolicy: IfNotPresent
          name: xyme-monitor
          command:
            - python3
            - '-m'
            - app
            - monitor
            - '--deploy'
            - '-a'
            - 0.0.0.0
          envFrom:
            - configMapRef:
                name: xyme-monitor-config
            - configMapRef:
                name: xyme-config
          ports:
            - name: xyme-monitor
              containerPort: 8080
              protocol: TCP
            - name: prometheus
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: nfs
              mountPath: "/mnt/"
              subPath: "system/{{ .Release.Namespace }}/accern/{{ .Values.efsMount | default "xyme" }}"
            - name: cache
              mountPath: /cache
            - name: xyme-backend
              mountPath: /xyme/xyme-backend
            - name: xyme-k8s-templates
              mountPath: /xyme/deploys/k8s/xyme-worker-queue.template.yaml
              subPath: xyme-worker-queue.template.yaml
            - name: xyme-k8s-templates
              mountPath: /xyme/deploys/k8s/xyme-worker-task.template.yaml
              subPath: xyme-worker-task.template.yaml
            - name: xyme-license
              mountPath: /xyme/xyme-license
            - name: xyme-scripts
              mountPath: /xyme/xyme-scripts
          resources:
            limits:
              cpu: "3"
              memory: "5Gi"
            requests:
              cpu: "2"
              memory: "4Gi"
      volumes:
        - name: xyme-k8s-templates
          configMap:
            name: xyme-k8s-templates
        - name: xyme-backend
          configMap:
            name: xyme-backend
        - name: xyme-scripts
          configMap:
            name: xyme-scripts
        - name: xyme-license
          configMap:
            name: xyme-license
        - name: nfs
          persistentVolumeClaim:
            claimName: {{ required "Provide a value for efsClaim." .Values.efsClaim }}
        - name: cache
          emptyDir:
            medium: Memory
